name: Semantic Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install semantic-release dependencies
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          npm install -g @semantic-release/exec

      - name: Build multi-platform binaries
        working-directory: local-k8s-cluster-go
        run: |
          make build-all
          
          # Create archives
          cd bin
          
          # Linux
          tar -czf k3s-manager-linux-amd64.tar.gz k3s-manager-linux-amd64
          tar -czf k3s-manager-linux-arm64.tar.gz k3s-manager-linux-arm64
          
          # macOS
          tar -czf k3s-manager-darwin-amd64.tar.gz k3s-manager-darwin-amd64
          tar -czf k3s-manager-darwin-arm64.tar.gz k3s-manager-darwin-arm64
          
          # Windows
          zip k3s-manager-windows-amd64.zip k3s-manager-windows-amd64.exe
          
          ls -la

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./local-k8s-cluster-go
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/k3s-manager:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository }}/k3s-manager:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max